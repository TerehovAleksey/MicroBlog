@using Markdig;
@using Markdown.ColorCode;
@using MicroBlog.UI.Core.UiModels;
@inject IFilterService FilterService

@if (PostModel is not null)
{
    <div class="post">
        <nav class="breadcrumb">
            <NavLink href="/">@Strings.Home</NavLink>
            <span class="mx-2">></span>
            <a href="#" @onclick="()=>FilterService.SearchByTag(PostModel.MainTag)">@PostModel.MainTag</a>
            <span class="mx-2">></span>
            <span>@PostModel.Title</span>
        </nav>
        <h1 class="post-title">@PostModel.Title</h1>
        <div class="post-meta">
            <a class="post-author" href="#">
                <span class="oi oi-person ms-2"></span>
                @PostModel.Author
            </a>
            <a class="post-date" href="#">
                <span class="oi oi-clock ms-2"></span>
                @PostModel.DatePublished.ToShortDateString()
            </a>
        </div>
        <div class="post-body">
            <img src="@PostModel.Cover" alt="post">
            <div>
                <br>
            </div>
            <div>
                @((MarkupString)content);
            </div>
        </div>
        <div class="post-body">
            <PostTags Tags="PostModel?.Tags" />
        </div>
        <div class="post-body">
            <PostShare Slug="PostModel?.Slug" />
        </div>
    </div>
}


@code {

    [Parameter, EditorRequired]
    public PostModel? PostModel { get; set; }

    private string content = string.Empty;

    private MarkdownPipeline pipeline;

    public Post()
    {
        pipeline = new MarkdownPipelineBuilder()
        .UseAdvancedExtensions()
        .UseColorCode()
        .Build();
    }

    protected override void OnParametersSet()
    {
        if (PostModel is not null)
        {
            content = Markdown.ToHtml(PostModel.Content, pipeline);
        }
        base.OnParametersSet();
    }
}